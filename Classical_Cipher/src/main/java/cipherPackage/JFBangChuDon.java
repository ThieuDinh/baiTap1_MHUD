package cipherPackage;

/**
 *
 * @author dinht
 */
public class JFBangChuDon extends javax.swing.JFrame {

    /** Creates new form JFBangChuDon */
    public JFBangChuDon() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        outputTextArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        keyTextField = new javax.swing.JTextField();
        ranKeyButton = new javax.swing.JButton();
        encButton = new javax.swing.JButton();
        decButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bang ma chu don ");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Input ");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Output ");

        inputTextArea.setColumns(20);
        inputTextArea.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        inputTextArea.setRows(5);
        jScrollPane1.setViewportView(inputTextArea);

        outputTextArea.setColumns(20);
        outputTextArea.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        outputTextArea.setRows(5);
        jScrollPane2.setViewportView(outputTextArea);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setText("Key");

        keyTextField.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        ranKeyButton.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        ranKeyButton.setText("Random key");
        ranKeyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ranKeyButtonActionPerformed(evt);
            }
        });

        encButton.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        encButton.setText("Encrypt");
        encButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encButtonActionPerformed(evt);
            }
        });

        decButton.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        decButton.setText("Decrypt");
        decButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(encButton)
                                .addGap(73, 73, 73)
                                .addComponent(decButton))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1100, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1031, Short.MAX_VALUE)))
                        .addGap(50, 50, 50))))
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(keyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ranKeyButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(keyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ranKeyButton))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decButton)
                    .addComponent(encButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static String RandomKey(int n) {                         //khai báo phương thức tạo key
        char[] alphabet = "abcdefghijklmnopqrstuvwxyz".toCharArray();   //tạo mảng để chứa các ký tự a->z
        boolean[] usedLetters = new boolean[26];                        //tạo mảng đúng-sai để xác định các ký tự đã dùng
        StringBuilder result = new StringBuilder();                     //sử dụng lớp stringBuilder để tạo key dễ dàng, đơn giản hơn

        long seed = System.nanoTime();
        for (int i = 0; i < n; i++) {                                   //vòng lặp sẽ chạy n lần, ~ với số ký tự (26)
            int index;
            do {                                                        //vòng lặp do while này sử dụng thuật toán LCG (linear Congruential Generator) để lựa chọn ngẫu nhiên
                seed = (seed * 1103515245 + 12345) % 2147483647;        //các hằng số của thuật toán LCG
                index = (int) (seed % 26);
            } while (usedLetters[index]);

            result.append(alphabet[index]);
            usedLetters[index] = true;                                  // cập nhật các kystujw đã dùng
        }

        return result.toString();                                       //trả về kết quả là key random từ a->z
    }
    private void ranKeyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ranKeyButtonActionPerformed
        String key = RandomKey(26);                                   //tạo key
        keyTextField.setText(String.valueOf(key));                  //xuất key ra
    }//GEN-LAST:event_ranKeyButtonActionPerformed
    private static String encrypt(String text, String key) {        //phương thức mã hóa
        String cipherText = "";                                         //biến để chứa cipher text 
        String alp = "abcdefghijklmnopqrstuvwxyz";                      //mảng thứ tự chữ cái a->z
        char[] charArray = text.toCharArray();                          //mảng chứa các ký tự của plain text 
        for (int i = 0; i < charArray.length; i++) {                    //sử dụng 2 vòng lặp để kiểm tra lần lượt các ký tự của plain text 
            char currentChar = text.charAt(i);                          //với dãy ký tự mặc định từ a->z
            for (int j = 0; j < alp.length(); j++) {                    //ký tự của plain text trùng với ký tự của mảng mặc định sẽ chọn ký tự 
                if (currentChar == alp.charAt(j)) {                     //ở vị trí tương ứng trong mảng key làm cipher 
                    charArray[i] = (char) (key.charAt(j));
                }
            }
            cipherText += charArray[i];                                 //thêm ký tự đó vào chuỗi kết quả
        }
        return cipherText;                                              //trả về chuỗi cịher hoàn chỉnh
    }
    private void encButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encButtonActionPerformed
        String key = keyTextField.getText();
        String text = inputTextArea.getText();                          //nhận giá trị nhập vào
        outputTextArea.setText(String.valueOf(encrypt(text, key)));     //xuất ra kết quả
    }//GEN-LAST:event_encButtonActionPerformed
    private static String decrypt(String text, String key) {
        String plainText = "";
        String alp = "abcdefghijklmnopqrstuvwxyz";
        char[] charArray = text.toCharArray();
        for (int i = 0; i < charArray.length; i++) {
            char currentChar = text.charAt(i);
            for (int j = 0; j < key.length(); j++) {
                if (currentChar == key.charAt(j)) {
                    charArray[i] = (char) (alp.charAt(j));              //tương tự như phương thức encrypt nhưng 
                }                                                       //ta so sánh ký tự đầu vào với ký tự của mảng key
            }                                                           //và chọn ký tự ở vị trí tương ứng trong mảng mặc định
            plainText += charArray[i];
        }
        return plainText;
    }
    private void decButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decButtonActionPerformed
        String key = keyTextField.getText();
        String text = inputTextArea.getText();
        
        outputTextArea.setText(String.valueOf(decrypt(text, key)));
    }//GEN-LAST:event_decButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFBangChuDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFBangChuDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFBangChuDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFBangChuDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFBangChuDon().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton decButton;
    private javax.swing.JButton encButton;
    private javax.swing.JTextArea inputTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField keyTextField;
    private javax.swing.JTextArea outputTextArea;
    private javax.swing.JButton ranKeyButton;
    // End of variables declaration//GEN-END:variables
}
